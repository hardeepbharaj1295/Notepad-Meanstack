{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/note-center/note-center.component.css","webpack:///./src/app/note-center/note-center.component.html","webpack:///./src/app/note-center/note-center.component.ts","webpack:///./src/app/note-detail/note-detail.component.css","webpack:///./src/app/note-detail/note-detail.component.html","webpack:///./src/app/note-detail/note-detail.component.ts","webpack:///./src/app/note-list/note-list.component.css","webpack:///./src/app/note-list/note-list.component.html","webpack:///./src/app/note-list/note-list.component.ts","webpack:///./src/app/note.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { HomeComponent } from './home/home.component';\nimport { NoteCenterComponent } from './note-center/note-center.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: HomeComponent},\n  {path: 'notes', component: NoteCenterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\n  <!-- Brand/logo -->\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Notepad</a>\\n  \\n  <!-- Links -->\\n  <ul class=\\\"navbar-nav\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Home</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/notes\\\" routerLinkActive=\\\"active\\\">Notes</a>\\n    </li>\\n  </ul>\\n</nav>\\n<div class=\\\"container\\\" style=\\\"margin: 20px\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'notepad';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NoteCenterComponent } from './note-center/note-center.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { NoteListComponent } from './note-list/note-list.component';\nimport { NoteDetailComponent } from './note-detail/note-detail.component';\nimport {FormsModule} from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NoteCenterComponent,\n    NoteListComponent,\n    NoteDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <h1>Notepad</h1>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-9\\\">\\n        <div *ngIf=\\\"!hidenewNote\\\">\\n          \\n            <h2>New Note</h2>\\n            <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitAddValue(form.value)\\\" class=\\\"well\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label>Title</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" required name=\\\"title\\\" ngModel>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label>Timing</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" required name=\\\"timing\\\" ngModel>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label>Description</label>\\n                      <div class=\\\"form-group\\\">\\n                            <textarea class=\\\"form-control\\\" required rows=\\\"5\\\" name=\\\"description\\\" ngModel>\\n                                </textarea>\\n                        </div>\\n                  </div>\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\n            </form>\\n        </div>\\n        <note-detail (updateNoteEvent)=\\\"onUpdateNoteEvent($event)\\\" \\n        (deleteNoteEvent)=\\\"onDeleteNoteEvent($event)\\\"\\n         *ngIf=\\\"selectedNote && hidenewNote\\\" \\n         [note]=\\\"selectedNote\\\"></note-detail>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n        <button (click)=\\\"newNote()\\\" style=\\\"margin-bottom:2px;\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\"> + New Note </button>\\n        <note-list (SelectNote)=\\\"onSelectNote($event)\\\" [notes]='notes'></note-list>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { Note } from '../note';\nimport { NoteService } from '../note.service';\n    \n@Component({\n  selector: 'app-note-center',\n  templateUrl: './note-center.component.html',\n  styleUrls: ['./note-center.component.css'],\n  providers: [NoteService,DatePipe]\n})\nexport class NoteCenterComponent implements OnInit {\n\n  notes: Array<Note>;\n\n  selectedNote: Note;\n  private hidenewNote:boolean = true;\n  // times : Date = new Date();\n  // public ntime = this.times.toISOString().substring(0, 10);\n\n  constructor(private _noteService : NoteService) { }\n\n  ngOnInit() {\n    this._noteService.getNotes()\n    .subscribe(resNoteData => this.notes = resNoteData);\n  }\n\n  onSelectNote(note:any){\n    this.selectedNote = note;\n    this.hidenewNote = true;\n    console.log(this.selectedNote);\n  }\n\n  onSubmitAddValue(note : Note){\n      this._noteService.addNote(note)\n      .subscribe(resNewNote => {\n        // This code is mainly used for updated notes show in UI \n          this.notes.push(resNewNote);\n          this.hidenewNote = true;\n          this.selectedNote = resNewNote;\n      });\n  }\n\n  onUpdateNoteEvent(note : any){\n    this._noteService.updateNote(note)\n    .subscribe(resUpdateNote => note = resUpdateNote);\n    this.selectedNote = null;\n  };\n\n  onDeleteNoteEvent(note : any){\n      let noteArray = this.notes;\n      this._noteService.deleteNote(note)\n      .subscribe(resDeletedNote => {\n        for(let i=0;i < noteArray.length ; i++){\n          if(noteArray[i]._id === note._id)\n          {\n            noteArray.splice(i,1);\n          }\n        }\n      });\n      this.selectedNote = null;\n  };\n\n  newNote(){\n      this.hidenewNote = false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n    <div>\\n        <!-- <iframe width=\\\"100%\\\" height=\\\"300\\\" [src]=\\\"note.url | safe\\\"></iframe> -->\\n    </div>\\n    <form>\\n        <div *ngIf=\\\"editTitle\\\" class=\\\"form-group\\\">\\n            <input type=\\\"input\\\" class=\\\"form-control\\\" name=\\\"title\\\" required placeholder=\\\"title\\\" \\n            [(ngModel)]=\\\"note.title\\\">\\n        </div>\\n        <h3 *ngIf=\\\"!editTitle\\\" (click)=\\\"onTitleClick()\\\">{{note.title}}</h3>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"input\\\" class=\\\"form-control\\\" name=\\\"timing\\\" required placeholder=\\\"Timing\\\" \\n            [(ngModel)]=\\\"note.timing\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <textarea class=\\\"form-control\\\" rows=\\\"5\\\" name=\\\"desc\\\" [(ngModel)]=\\\"note.description\\\">\\n                </textarea>\\n        </div>\\n        <button type=\\\"button\\\" (click)=\\\"updateNote()\\\" class=\\\"btn btn-primary\\\">Update</button>\\n        <button type=\\\"button\\\" (click)=\\\"deleteNote()\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n    </form>\\n</div>\"","import { Component, OnInit, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'note-detail',\n  templateUrl: './note-detail.component.html',\n  styleUrls: ['./note-detail.component.css'],\n  inputs: ['note'],\n  outputs: ['updateNoteEvent','deleteNoteEvent']\n})\nexport class NoteDetailComponent implements OnInit {\n\n  note: any;\n\n  private editTitle: boolean = false;\n  private updateNoteEvent = new EventEmitter();\n  private deleteNoteEvent = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(){\n    this.editTitle = false;\n  }\n\n  onTitleClick(){\n    this.editTitle = true;\n  }\n\n  updateNote(){\n     this.updateNoteEvent.emit(this.note);\n  }\n\n  deleteNote(){\n    this.deleteNoteEvent.emit(this.note);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" (click)=\\\"onSelect(note)\\\" *ngFor=\\\"let note of notes\\\"><a>{{note.title}}</a></li>\\n</ul>\"","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Note } from '../note';\n\n@Component({\n  selector: 'note-list',\n  templateUrl: './note-list.component.html',\n  styleUrls: ['./note-list.component.css'],\n  inputs: ['notes'],\n  outputs: ['SelectNote']\n})\nexport class NoteListComponent implements OnInit {\n\n  public SelectNote = new EventEmitter();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onSelect(not: Note){\n    this.SelectNote.emit(not);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Note } from './note';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { Observable, of, throwError } from 'rxjs';\n\n@Injectable()\nexport class NoteService {\n\n  /**\n   * Select, Insert, Update, Delete\n   * connection url\n   */\n  private _getUrl = \"/api/note\";\n  private _postUrl = \"/api/note\";\n  private _putUrl = \"/api/note/\";\n  private _deleteUrl = \"/api/note/\";\n\n  constructor(private _http: Http) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n};\n  /**\n   * method to get data from the db\n   */\n  getNotes(): Observable<any> {\n    return this._http.get(this._getUrl).pipe(\n      map((response: Response) => response.json()),\n      catchError(this.handleError));\n}\n\n  /**\n   * MEthod to insert data into db\n   */\n  addNote(note : Note){\n      let headers = new Headers({ 'Content-Type' : 'application/json'});\n      let options = new RequestOptions({ headers : headers});\n      return this._http.post(this._postUrl,JSON.stringify(note), options)\n      .pipe(\n        map((response: Response) => response.json()),\n        catchError(this.handleError));\n  }\n\n  /**\n   * Method to update data into db\n   */\n  updateNote(note : Note){\n    let headers = new Headers({ 'Content-Type' : 'application/json'});\n    let options = new RequestOptions({ headers : headers});\n    return this._http.put(this._putUrl + note._id,JSON.stringify(note), options)\n    .pipe(\n      map((response: Response) => response.json()),\n      catchError(this.handleError));\n  }\n\n  /**\n   * Method to delete data into db\n   */\n  deleteNote(note : Note){\n    return this._http.delete(this._deleteUrl + note._id)\n    .pipe(\n      map((response: Response) => response.json()),\n      catchError(this.handleError));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}